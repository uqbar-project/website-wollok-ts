---
import { Code } from "astro:components";
import { Node } from "wollok-ts";
import { wollokDoc } from "./utils";
import wollokHighlightConfig from "../../../shiki-grammars/wollok.json";

interface Props {
  node: Node;
}

const { node } = Astro.props;

const [comment, examples] = wollokDoc(node).split("Example");

const sanitize = (documentation: string) =>
  documentation
    .replaceAll("/*", "")
    .replaceAll("*/", "")
    .replaceAll("*", "")
    .replaceAll(/@author ([A-z ])*/g, "")
    .replaceAll(
      /@([A-z])*/g,
      (substring) => `<strong>${substring.slice(1)}</strong>`
    )
    .trim();
const code = examples?.split("\n")
        .slice(1) // Remove first line
        .map(sanitize)
        .filter((_) => _) // Remove empty lines after sanitization
        .join("\n")

const codeThemes = [
  {theme: 'github-dark', hide: 'hide-light'}, 
  {theme: 'github-light', hide: 'hide-dark'}
] as const
---

{
  comment ? (
    comment
      .split("\n") // Same format than the code
      .map((text) => <p style="margin-top:0;" set:html={sanitize(text)} />)
  ) : (
    <p style="margin-top:0;"></p>
  )
}
{
  code && (codeThemes.map(({theme, hide}) => (
    <Code
      code={code}
      lang={wollokHighlightConfig}
      theme={theme}
      class={hide}
    />
  ))
  )
}
